name: CTGov Ingestion Pipeline



on:
  workflow_dispatch:   # allow manual run from GitHub UI
  schedule:
    # Every 2 hours on the first Monday of each month
    - cron: "0 */2 * * 1"

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # Inject from GitHub secrets
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      LOG_LEVEL: INFO

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ingestion/requirements.txt
          pip install dbt-snowflake
          pip install great_expectations pandas pyarrow

      - name: Install ingestion + dbt + GX deps
        run: |
          python -m pip install --upgrade pip
          pip install -r ingestion/requirements.txt
          pip install dbt-snowflake
          # Great Expectations + Snowflake SQLAlchemy driver
          pip install great-expectations snowflake-sqlalchemy "sqlalchemy<2.0"
    
      - name: Run ingestion
        run: python ingestion/clinical_trials_api.py

      - name: Run dbt models
        run: |
          cd dbt
          dbt deps
          dbt run --profiles-dir .

      # ---------- Great Expectations validation ----------

      - name: Run Great Expectations checks (staging)
        run: |
          python quality/run_gx_checks.py 

      - name: Upload GX artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gx-artifacts
          path: |
            quality/.reports/gx_result.json
            quality/.reports/gx_summary.txt

      # ---------- dbt docs generation ----------
      - name: Build dbt docs
        run: |
          dbt deps --project-dir dbt
          dbt docs generate --project-dir dbt --profiles-dir dbt

      - name: Upload dbt docs
        uses: actions/upload-artifact@v4
        with:
         name: dbt-docs
         path: dbt/target


          